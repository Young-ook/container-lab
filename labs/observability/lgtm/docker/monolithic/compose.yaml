# Do not use this configuration in production.
# It is for demonstration or test purposes only.

---
name: lgtm-mono

networks:
  grafana-net:
    driver: bridge

services:
  flog:
    image: mingrammer/flog
    restart: on-failure
    command: -f json -d 200ms -l
    networks:
      - grafana-net

  alloy:
    image: grafana/alloy:latest
    restart: on-failure
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    ports:
      - 12345
    volumes:
      - ./config/alloy:/etc/alloy:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - loki
      - mimir
    networks:
      - grafana-net

  loki:
    image: grafana/loki:latest
    restart: on-failure
    command: ["-config.file=/etc/loki/local-config.yaml", "-target=all"]
    ports:
      - 3100
      - 7946
      - 9095
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grafana-net

  mimir:
    image: grafana/mimir:latest
    restart: on-failure
    command:
      - "-server.http-listen-port=3100"
# This is configuration to turn off "send data to ingesters: at least 2 live replicas required, could only find 1" warning.
# Do not apply in production.
      - "-ingester.ring.store=inmemory"
      - "-ingester.ring.replication-factor=1"
      - "-target=all"
    ports:
      - 3001:3100
      - 7946
      - 9095
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grafana-net

  grafana:
    image: grafana/grafana:latest
    restart: on-failure
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        /run.sh
    environment:
      - GF_PATH_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    configs:
      - source: datasource-config
        target: /etc/grafana/provisioning/datasources/datasources.yaml
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - alloy
      - loki
      - mimir
    networks:
      - grafana-net

configs:
  datasource-config:
    content: |
      apiVersion: 1
      datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "tenant1"
      - name: Mimir
        type: prometheus
        access: proxy
        orgId: 1
        url: http://mimir:3100/prometheus
        version: 1
        editable: true
        isDefault: true
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
          alertmanagerUid: "alertmanager"
        secureJsonData:
          httpHeaderValue1: "tenant1"
